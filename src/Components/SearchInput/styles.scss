@use "Styles/Variables";

.uxverse-search-input {
  --height: 45px;
  --padding: 2px;
  --border-radius: 0.5em;
  --base-color: #{Variables.$light-gray};
  --focus-color: #{Variables.$lighter-gray};
  --secondary-color: #{Variables.$gray-text-secondary};
  width: 100%;
  height: var(--height);
  background-color: var(--base-color);
  border-radius: var(--border-radius);
  padding: var(--padding);
  position: relative;
  @include Variables.center;
  &:focus-within {
    &::after {
      opacity: 1;
    }
    &>input,
    &>button {
      background-color: var(--focus-color);
    }
    &>button > svg {
      &:first-of-type {
        opacity: 0;
      }
      &:last-of-type {
        opacity: 0.75;
      }
    }
  }
  &::after {
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    position: absolute;
    border-radius: inherit;
    transition: opacity 0.5s;
    @include Variables.rainbowGradient;
    opacity: 0;
  }
  &>button,
  &>input {
    position: relative;
    z-index: 2;
    border: none;
    outline: none;
    background-color: var(--base-color);
    transition: background-color 0.5s;
  }
  &>button {
    border: none;
    outline: none;
    height: 100%;
    width: var(--height);
    flex-shrink: 0;
    border-radius: 0;
    @include Variables.center;
    border-top-left-radius: calc(var(--border-radius) * 0.75);
    border-bottom-left-radius: calc(var(--border-radius) * 0.75);
    &>svg {
      width: 75%;
      height: 75%;
      transition: opacity 0.5s;
      pointer-events: none;
      &:first-of-type {
        opacity: 0.75;
        z-index: 1;
        position: relative;
        stroke: var(--secondary-color);
      }
      &:last-of-type {
        opacity: 0;
        z-index: 0;
        position: absolute;
        stroke: url(#themeGradientRight);
      }
    }
  }
  &>input {
    width: 100%;
    height: 100%;
    padding: 0 1em 0 0;
    border-radius: 0;
    color: Variables.$black-text;
    border-top-right-radius: calc(var(--border-radius) * 0.75);
    border-bottom-right-radius: calc(var(--border-radius) * 0.75);
    &::placeholder {
      color: var(--secondary-color);
    }
  }
}