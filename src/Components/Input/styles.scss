@use "Styles/Variables";

.visitor-input {
  --height: 40px;
  width: 100%;
  position: relative;
  height: var(--height);
  @include Variables.center;
  background: Variables.$lighter-gray;
  border-radius: 0.5em;
  border: 2px solid Variables.$lighter-gray;
  @include Variables.gradientUnderline;
  &.focused,
  &.valid {
    &>.visitor-input__icon > svg {
      &:first-of-type {
        opacity: 0;
      }
      &:last-of-type {
        opacity: 1;
      }
    }
  }
  &.focused {
    &::after {
      scale: 1 1;
    }
  }
  &.valid > .visitor-input__feedback > svg:first-of-type {
    opacity: 1;
  }
  &.invalid > .visitor-input__feedback {
    pointer-events: auto;
    &> svg:last-of-type {
      opacity: 1;
    }
  }
  &__label {
    pointer-events: none;
    position: absolute;
    opacity: 0;
  }
  &__feedback,
  &__icon {
    width: var(--height);
    height: var(--height);
    display: grid;
    place-content: center;
    flex-shrink: 0;
    background-color: transparent;
    &>svg {
      width: 100%;
      height: 100%;
      grid-area: 1 / 1;
      transition: opacity 0.3s;
    }
  }
  &__icon {
    &>svg {
      scale: 0.65;
      &:first-of-type {
        stroke: Variables.$gray-text-secondary;
      }
      &:last-of-type {
        opacity: 0;
        fill: url(#themeGradient);
      }
    }
  }
  &>input {
    height: var(--height);
    width: 100%;
    border: none;
    padding: 0;
    padding-right: 0.5em;
    outline: none;
    background-color: transparent;
    &::placeholder {
      color: Variables.$gray-text-secondary;
    }
  }
  &__feedback {
    pointer-events: none;
    border-radius: 50%;
    outline-offset: -2px;
    &:focus-visible {
      outline: 1.5px solid Variables.$red;
    }
    &>svg {
      scale: 0.75;
      opacity: 0;
      &:first-of-type {
        stroke: url(#success);
      }
       &:last-of-type {
        stroke: url(#error);
        & path:first-of-type,
        & path:last-of-type {
          stroke: Variables.$red;
        }
      }
    }
  }
}